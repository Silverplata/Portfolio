---
import "../styles/components.css"
import SunIcon from "./icons/Sun.astro"
import MoonIcon from "./icons/Moon.astro"
import SystemIcon from "./icons/System.astro"

const THEMES = ["Light", "Dark", "System"]
---

<div class="relative ml-1 mr-1">
  <button
    transition:persist
    id="theme-toggle-btn"
    class="theme-toggle-btn"
  >
    <span class="sr-only">Elige el tema</span>
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-smooth" />
    <MoonIcon id="dark" class="theme-toggle-icon absolute size-5 transition-smooth" />
    <SystemIcon id="system" class="theme-toggle-icon absolute size-5 transition-smooth" />
  </button>
  <div
    transition:persist
    id="themes-menu"
    class="themes-menu"
  >
    <ul>
      {THEMES.map((theme) => (
        <li class="themes-menu-option">{theme}</li>
      ))}
    </ul>
  </div>
</div>

<script is:inline>
  let remove = null
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)")
  const themesMenu = document.getElementById("themes-menu")

  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "system"
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"
  }

  const updateIcon = (themePreference) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
      element.style.scale = element.id === themePreference ? "1" : "0"
    })
  }

  const updateTheme = () => {
    if (remove != null) {
      remove()
    }
    matchMedia.addEventListener("change", updateTheme)
    remove = () => {
      matchMedia.removeEventListener("change", updateTheme)
    }

    const themePreference = getThemePreference()
    const isDark = themePreference === "dark" || (themePreference === "system" && matchMedia.matches)

    updateIcon(themePreference)
    document.documentElement.classList[isDark ? "add" : "remove"]("dark")
  }

  updateTheme()

  document.addEventListener("click", () => themesMenu.classList.remove("open"))

  document.getElementById("theme-toggle-btn").addEventListener("click", (e) => {
    e.stopPropagation()
    const isClosed = !themesMenu.classList.contains("open")
    themesMenu.classList[isClosed ? "add" : "remove"]("open")
  })

  document.querySelectorAll(".themes-menu-option").forEach((element) => {
    element.addEventListener("click", (e) => {
      localStorage.setItem("theme", e.target.innerText.toLowerCase().trim())
      updateTheme()
    })
  })

  document.addEventListener('astro:after-swap', () => {
    updateTheme();
    window.scrollTo({ left: 0, top: 0, behavior: 'instant' });
  })
</script>